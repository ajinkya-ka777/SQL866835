-- Drop temporary table if it exists to avoid conflicts
IF OBJECT_ID('tempdb..#OrphanedUsers') IS NOT NULL DROP TABLE #OrphanedUsers;

-- Create a temporary table to store orphaned user information
CREATE TABLE #OrphanedUsers (
    DatabaseName NVARCHAR(255),
    UserName NVARCHAR(255)
);

-- Insert orphaned users into #OrphanedUsers using sp_MSforeachdb
DECLARE @command NVARCHAR(1000);
SET @command = 'USE [?]; INSERT INTO #OrphanedUsers (DatabaseName, UserName)
                EXEC sp_change_users_login ''report'';';
EXEC sp_MSforeachdb @command;

-- Main query to retrieve information about databases and logins
SELECT @@SERVICENAME AS InstanceName,
    db.name AS DatabaseName,
    CASE
        WHEN db.is_trustworthy_on = 1 THEN 'Yes'
        WHEN db.is_trustworthy_on = 0 THEN 'No'
        ELSE 'NULL'
    END AS is_trustworthy_on,
    SUSER_SNAME(db.owner_sid) AS db_owner,
    CASE
        WHEN IS_SRVROLEMEMBER('sysadmin', SUSER_SNAME(db.owner_sid)) = 1 THEN 'Yes'
        WHEN IS_SRVROLEMEMBER('sysadmin', SUSER_SNAME(db.owner_sid)) = 0 THEN 'No'
        ELSE 'NULL'
    END AS is_sysadmin,
    CASE
        WHEN sl.is_disabled = 1 THEN 'Yes'
        WHEN sl.is_disabled = 0 THEN 'No'
        ELSE 'NULL'
    END AS IsLoginDisabled,
    NULL AS IsOrphaned, -- Temporarily setting this to NULL to update later
    CASE
        WHEN dbm.mirroring_role = 1 THEN 'Mirroring - Primary'
        WHEN dbm.mirroring_role = 2 THEN 'Mirroring - Secondary'
        WHEN sys.fn_hadr_is_primary_replica(db.name) = 1 THEN 'AG - Primary'
        WHEN sys.fn_hadr_is_primary_replica(db.name) = 0 THEN 'AG - Secondary'
        ELSE 'None'
    END AS DR_Role
INTO #DatabaseInfo
FROM sys.databases db
LEFT JOIN sys.sql_logins sl ON db.owner_sid = sl.sid
LEFT JOIN sys.database_mirroring dbm ON db.database_id = dbm.database_id;

-- Update the IsOrphaned column based on #OrphanedUsers data
UPDATE #DatabaseInfo
SET IsOrphaned = 'Yes'
FROM #DatabaseInfo d
JOIN #OrphanedUsers o ON d.DatabaseName = o.DatabaseName AND d.db_owner = o.UserName;

-- Final select from the updated #DatabaseInfo
SELECT *
FROM #DatabaseInfo;

-- Clean up temporary tables
DROP TABLE IF EXISTS #OrphanedUsers;
DROP TABLE IF EXISTS #DatabaseInfo;