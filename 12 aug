"IISLogging": {
  "Enabled": true,
  "LogDirectory": "D:\\logs\\iis",
  "LogFields": [
    "Date", "Time", "ClientIp", "UserName", "SiteName", "ComputerName",
    "ServerIp", "Method", "UriStem", "UriQuery", "HttpStatus", "Win32Status",
    "BytesSent", "BytesRecv", "TimeTaken", "ServerPort", "UserAgent", "Cookie",
    "Referer", "ProtocolVersion", "Host"
  ]
}


# === STEP XX: Configure IIS Logging (Server Level, Standard Fields Only) ===
Write-Log "STEP XX: Configuring IIS logging at server level (W3C standard fields only)"

$iisLog = $config.IISLogging
if ($iisLog.Enabled -eq $true) {
    try {
        $sitePath = "MACHINE/WEBROOT/APPHOST"
        $logConfigPath = "system.applicationHost/sites/siteDefaults/logFile"

        # Set log directory
        Set-WebConfigurationProperty -PSPath $sitePath `
            -Filter $logConfigPath `
            -Name directory `
            -Value $iisLog.LogDirectory

        # Set standard W3C log fields
        $fields = ($iisLog.LogFields -join ',')  # Comma-separated list
        Set-WebConfigurationProperty -PSPath $sitePath `
            -Filter $logConfigPath `
            -Name logExtFileFlags `
            -Value $fields

        Write-Log "‚úÖ IIS W3C log fields set: $fields"
        Write-Log "‚úÖ IIS log directory set to: $($iisLog.LogDirectory)"
    } catch {
        Write-Log "‚ùå Failed to configure IIS logging: $_" "ERROR"
    }
} else {
    Write-Log "‚ÑπÔ∏è Skipping IIS logging configuration (disabled in config)"
}
Confirm-Continue




third


# === STEP XX: Configure IIS Logging (Server Level, Standard Fields Only) ===
Write-Log "STEP XX: Configuring IIS logging at server level (W3C standard fields only)"

$iisLog = $config.IISLogging
if ($iisLog.Enabled -eq $true) {
    try {
        $sitePath = "MACHINE/WEBROOT/APPHOST"
        $logConfigPath = "system.applicationHost/sites/siteDefaults/logFile"

        # Ensure log directory exists
        if (-not (Test-Path $iisLog.LogDirectory)) {
            New-Item -Path $iisLog.LogDirectory -ItemType Directory -Force | Out-Null
            Write-Log "üìÇ Created log directory: $($iisLog.LogDirectory)"
        }

        # Set log directory
        Set-WebConfigurationProperty -PSPath $sitePath `
            -Filter $logConfigPath `
            -Name directory `
            -Value $iisLog.LogDirectory

        # Set standard W3C log fields (must match IIS casing)
        $fields = ($iisLog.LogFields -join ',')
        Set-WebConfigurationProperty -PSPath $sitePath `
            -Filter $logConfigPath `
            -Name logExtFileFlags `
            -Value $fields

        Write-Log "‚úÖ IIS W3C log fields set: $fields"
        Write-Log "‚úÖ IIS log directory set to: $($iisLog.LogDirectory)"
    } catch {
        Write-Log "‚ùå Failed to configure IIS logging: $_" "ERROR"
    }
} else {
    Write-Log "‚ÑπÔ∏è Skipping IIS logging configuration (disabled in config)"
}
Confirm-Continue